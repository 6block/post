name: CI

on:
  pull_request:
  push:
    branches:
      - develop

jobs:
  quicktests:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: set up go
        uses: actions/setup-go@v4
        with:
          check-latest: true
          go-version-file: "go.mod"
      - name: fmt, tidy, generate
        run: |
          make install
          make test-fmt
          make test-tidy
          make test-generate
      - name: staticcheck
        run: make staticcheck

  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: set up go
        uses: actions/setup-go@v4
        with:
          check-latest: true
          go-version-file: "go.mod"
      - name: setup env
        run: make install
      - name: lint
        run: make lint-github-action

  unittests:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    needs:
      - quicktests
      - lint
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: set up go
        uses: actions/setup-go@v4
        with:
          check-latest: true
          go-version-file: "go.mod"
      - name: setup env
        run: make install
      - name: Add OpenCL support for Linux
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: sudo apt-get update -q && sudo apt-get install -qy ocl-icd-opencl-dev libpocl2 clinfo
      - name: Add OpenCL support for Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: choco install opencl-intel-cpu-runtime
      - name: Clear test cache
        run: make clear-test-cache
      - name: unit tests
        env:
          GOTESTSUM_FORMAT: standard-verbose
          GOTESTSUM_JUNITFILE: unit-tests.xml
        run: make test
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        # always run even if the previous step fails
        if: always()
        with:
          report_paths: "**/unit-tests.xml"
          annotate_only: true
